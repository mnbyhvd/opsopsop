version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: opsopsop-db
    environment:
      MYSQL_ROOT_PASSWORD: MasterSPS2024!
      MYSQL_DATABASE: master_sps
      MYSQL_USER: master_sps_user
      MYSQL_PASSWORD: MasterSPS2024!
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pMasterSPS2024!"]
      timeout: 20s
      retries: 10
    networks:
      - master_sps_network

  backend:
    build: ./backend
    container_name: opsopsop-backend
    environment:
      NODE_ENV: production
      DB_HOST: opsopsop-db
      DB_PORT: 3306
      DB_NAME: master_sps
      DB_USER: master_sps_user
      DB_PASSWORD: MasterSPS2024!
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - master_sps_network

  frontend:
    build: ./frontend
    container_name: opsopsop-frontend
    environment:
      REACT_APP_API_URL: https://sps-master.ru/api
    ports:
      - "3000:3000"
    networks:
      - master_sps_network

  admin:
    build: ./admin
    container_name: opsopsop-admin
    environment:
      REACT_APP_API_URL: https://sps-master.ru/api
    ports:
      - "3000:3000"
    networks:
      - master_sps_network

  nginx:
    image: nginx:alpine
    container_name: opsopsop-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - master_sps_network

  certbot:
    image: certbot/certbot
    container_name: opsopsop-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email vikulindmitrii@yandex.ru --agree-tos --no-eff-email -d sps-master.ru

volumes:
  mysql_data:

networks:
  master_sps_network:
    driver: bridge